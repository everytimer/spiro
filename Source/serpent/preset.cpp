////////////////////////////////////////////////////////////////////////////////////////
// PRESET
// V.0.0.1 2022-01-2
////////////////////////////////////////////////////////////////////////////////////////
#include "preset.h"

namespace cell {

void preset::list()
{
    int st = path_prefix.length() + 1;
    preset_count = 0;
    for (auto const& entry : std::filesystem::directory_iterator { presets } ) 
    {
        ss<<entry;
        string name = ss.str().substr(st, ss.str().length() - st - 1);
        preset_list.push_back(name);
        ss.str("");
        ss.clear();
        preset_count++;
    }
}

void preset::save(const string& name)
{
    ff.open(path_prefix + name, std::ios_base::out);
    ff<<*volume<<"\n";
    ///////////////////////////////////////////////////////////
    // Oscillators ////////////////////////////////////////////
    ///////////////////////////////////////////////////////////
    // Amp Envelopes //////////////////////////////////////////
    ///////////////////////////////////////////////////////////
    // LFOs ///////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////
    // Sequencer //////////////////////////////////////////////
    ff.close();
}

void preset::load(const string& name)
{
    ff.open(path_prefix + name, std::ios_base::in);
    ff>>*volume;
    ///////////////////////////////////////////////////////////
    // Oscillators ////////////////////////////////////////////
    ///////////////////////////////////////////////////////////
    // Amp Envelopes //////////////////////////////////////////
    ///////////////////////////////////////////////////////////
    // LFOs ///////////////////////////////////////////////////
    ///////////////////////////////////////////////////////////
    // Sequencer //////////////////////////////////////////////
    ff.close();
}

preset::preset()
{

}

preset::~preset()
{
}

};

////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////